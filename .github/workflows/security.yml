name: Android Security

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  verify-commits:
    name: Verify Commit Signatures
    runs-on: ubuntu-latest
    steps:
      - name: Get commit verification status from GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîç Checking for unverified commits via GitHub API..."
          
          # Fetch commits from the current push or PR
          commits=$(jq -r '.commits[].id' < $GITHUB_EVENT_PATH)
          
          bad=false
          for commit in $commits; do
            verified=$(gh api repos/${{ github.repository }}/commits/$commit --jq '.commit.verification.verified')
            if [ "$verified" != "true" ]; then
              echo "‚ùå Commit $commit is not verified!"
              bad=true
            fi
          done
          
          if [ "$bad" = "true" ]; then
            echo "‚ùå Found unverified commits. Rejecting pipeline."
            exit 1
          else
            echo "‚úÖ All commits are verified and trusted."
          fi

  # Step 2. Run SonarCloud static analysis
  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: verify-commits

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for Sonar to get full Git history

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant Execute Permission to Gradlew
        run: chmod +x gradlew

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar \
            "-Dsonar.organization=basimjm" \
            "-Dsonar.projectKey=basimJm_pipelines-sample-project" \
            "-Dsonar.host.url=https://sonarcloud.io" \
            "-Dsonar.scanner.metadata.skip=true"

  build:
    name: Build & Test Android
    runs-on: ubuntu-latest
    needs: sonar

    env:
      JAVA_VERSION: "17"
      ANDROID_API_LEVEL: "36"
      ANDROID_BUILD_TOOLS_VERSION: "36.0.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Install Android SDK components
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -o cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          yes | sdkmanager --licenses
          yes | sdkmanager "platform-tools" \
                      "platforms;android-${{ env.ANDROID_API_LEVEL }}" \
                      "build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}"

      - name: Build project
        run: ./gradlew assembleDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
